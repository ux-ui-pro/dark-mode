/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_dark_mode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/dark-mode.js */ \"./src/js/modules/dark-mode.js\");\n\r\n\r\n(0,_modules_dark_mode_js__WEBPACK_IMPORTED_MODULE_0__.ThemeSwitcher)()\r\n\r\n\r\n\n\n//# sourceURL=webpack://dark-mode/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/dark-mode.js":
/*!*************************************!*\
  !*** ./src/js/modules/dark-mode.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemeSwitcher\": () => (/* binding */ ThemeSwitcher)\n/* harmony export */ });\nfunction ThemeSwitcher() {\r\n\r\n    const toggleButton = document.querySelector('.js-switch-theme'),\r\n        themeTextMap = {'dark': 'Dark Mode', 'light': 'Light Mode'},\r\n        bodyStyles = window.getComputedStyle(document.body)\r\n\r\n    let barThemeDark = bodyStyles.getPropertyValue('--theme-dark'),\r\n        barThemeLight = bodyStyles.getPropertyValue('--theme-light'),\r\n        currentTheme = null\r\n\r\n    window.metaColors = {\r\n        'dark': barThemeDark,\r\n        'light': barThemeLight\r\n    }\r\n\r\n    function doToggle() {\r\n        const themeKeys = Object.keys(themeTextMap)\r\n        currentTheme = themeKeys[(themeKeys.indexOf(currentTheme) + 1) % themeKeys.length]\r\n        localStorage.setItem('savedColorScheme', currentTheme)\r\n        applyTheme()\r\n    }\r\n\r\n    function init() {\r\n        currentTheme = localStorage.getItem('savedColorScheme') || 'dark'\r\n        applyTheme()\r\n    }\r\n\r\n    init()\r\n\r\n    function applyTheme() {\r\n        let dataTheme = currentTheme\r\n        if (dataTheme === null) {\r\n            dataTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\r\n        }\r\n        document.documentElement.setAttribute('data-theme', 'theme-' + dataTheme)\r\n        document.querySelector('meta[name=\"theme-color\"]').setAttribute('content', window.metaColors[dataTheme])\r\n        toggleButton.classList.remove('dark-mode', 'light-mode')\r\n        toggleButton.classList.add(dataTheme + '-mode')\r\n    }\r\n\r\n    toggleButton.addEventListener('click', () => {\r\n        doToggle()\r\n    })\r\n\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://dark-mode/./src/js/modules/dark-mode.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;